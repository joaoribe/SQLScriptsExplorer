<UserControl
    x:Class="SQLScriptsExplorer.Addin.Controls.FileExplorerTreeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:SQLScriptsExplorer.Addin.Styling.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:domain="clr-namespace:SQLScriptsExplorer.Addin.Models"
    xmlns:local="clr-namespace:SQLScriptsExplorer.Addin.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <!--<UserControl.Resources>
        <converter:SortableConverter x:Key="sortableConverter" />
    </UserControl.Resources>-->
    <Grid x:Name="MainGrid">

        <TreeView
            Name="TreeViewMain"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            BorderThickness="0"
            ContextMenuOpening="TreeViewMain_ContextMenuOpening"
            ItemsSource="{Binding}"
            KeyDown="TreeViewMain_KeyDown"
            MouseDoubleClick="TreeViewMain_MouseDoubleClick"
            PreviewMouseLeftButtonDown="TreeViewMain_PreviewMouseLeftButtonDown"
            PreviewMouseRightButtonDown="TreeViewMain_PreviewMouseRightButtonDown"
            SelectedItemChanged="TreeViewMain_SelectedItemChanged">

            <!--  Converter={StaticResource sortableConverter}, ConverterParameter=FileName}  -->
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type domain:TreeNode}" ItemsSource="{Binding Children}">
                    <StackPanel Height="17" Orientation="Horizontal">
                        <Image
                            Width="16"
                            Height="16"
                            Margin="3,0,5,0"
                            Source="{Binding Icon}" />
                        <local:HighlightTextBlock
                            HighlightBrush="Khaki"
                            HighlightPhrase="{Binding Path=HighlightPhrase, Mode=TwoWay}"
                            IsCaseSensitive="False"
                            IsHitTestVisible="False"
                            Text="{Binding Path=FileName}" />
                        <TextBox
                            x:Name="txtRename"
                            Width="Auto"
                            HorizontalAlignment="Center"
                            KeyDown="txtRename_KeyDown"
                            LostFocus="txtRename_LostFocus"
                            Text="{Binding FileName, Mode=TwoWay}"
                            Visibility="Collapsed" />
                    </StackPanel>
                </HierarchicalDataTemplate>

            </TreeView.ItemTemplate>

            <!--  This is conflicting with the code to select the whole row  -->
            <!--<TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="TreeViewItem.IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"/>
                </Style>

            </TreeView.ItemContainerStyle>-->

            <!--<ResourceDictionary Source="FileExplorerResourceDictionary.xaml" />-->

            <TreeView.Resources>

                <ContextMenu x:Key="FileContext" StaysOpen="true">
                    <MenuItem Click="mnuOpenNewInstance_Click" Header="Open New Instance">
                        <MenuItem.Icon>
                            <Image Source="../Resources/Images/OpenFile.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Click="mnuEditFile_Click" Header="Edit" />
                    <MenuItem Click="mnuExecuteFile_Click" Header="Execute">
                        <MenuItem.Icon>
                            <Image Source="../Resources/Images/Run.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Click="mnuOpenFolder_Click" Header="Open Containing Folder">
                        <MenuItem.Icon>
                            <Image Source="../Resources/Images/OpenFolder.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Click="mnuRename_Click" Header="Rename">
                        <MenuItem.Icon>
                            <Image Source="../Resources/Images/Rename.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Click="mnuDelete_Click" Header="Delete">
                        <MenuItem.Icon>
                            <Image Source="../Resources/Images/Delete.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
                <ContextMenu x:Key="FolderContext" StaysOpen="true">
                    <MenuItem Header="New">
                        <MenuItem Click="mnuNewFile_Click" Header="File">
                            <MenuItem.Icon>
                                <Image Source="../Resources/Images/NewSQLFile.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Click="mnuNewFolder_Click" Header="Folder" />
                    </MenuItem>
                    <MenuItem Click="mnuOpenFolder_Click" Header="Open Folder">
                        <MenuItem.Icon>
                            <Image Source="../Resources/Images/OpenFolder.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Click="mnuRename_Click" Header="Rename">
                        <MenuItem.Icon>
                            <Image Source="../Resources/Images/Rename.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Click="mnuDelete_Click" Header="Delete">
                        <MenuItem.Icon>
                            <Image Source="../Resources/Images/Delete.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
                <ContextMenu x:Key="RootFolderContext" StaysOpen="true">
                    <MenuItem Header="New">
                        <MenuItem Click="mnuNewFile_Click" Header="File">
                            <MenuItem.Icon>
                                <Image Source="../Resources/Images/NewSQLFile.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Click="mnuNewFolder_Click" Header="Folder" />
                    </MenuItem>
                    <MenuItem Click="mnuOpenFolder_Click" Header="Open Folder">
                        <MenuItem.Icon>
                            <Image Source="../Resources/Images/OpenFolder.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>

                <!--
                    =================================================================
                    TreeViewItem
                    ==================================================================
                -->

                <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

                <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Grid
                                    Width="15"
                                    Height="13"
                                    Background="Transparent">
                                    <Path
                                        x:Name="ExpandPath"
                                        Margin="1,1,1,1"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Data="M 4 0 L 8 4 L 4 8 Z"
                                        Fill="{StaticResource GlyphBrush}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="ExpandPath" Property="Data" Value="M 0 4 L 8 4 L 4 8 Z" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="TreeViewItemFocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border>
                                    <Rectangle
                                        Margin="0,0,0,0"
                                        Opacity="0"
                                        Stroke="Black"
                                        StrokeDashArray="1 2"
                                        StrokeThickness="5" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
                    <!--  Bind two ways for IsExpanded property  -->
                    <Setter Property="TreeViewItem.IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="TreeViewItem.IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />

                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="Padding" Value="1,0,0,0" />
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=Foreground}" />
                    <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <ControlTemplate.Resources>
                                    <converter:LeftMarginMultiplierConverter x:Key="lengthConverter" Length="19" />
                                </ControlTemplate.Resources>
                                <StackPanel>
                                    <Border
                                        Name="Bd"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                        <Grid Margin="{Binding Converter={StaticResource lengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="19" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <ToggleButton
                                                x:Name="Expander"
                                                ClickMode="Press"
                                                IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                Style="{StaticResource ExpandCollapseToggleStyle}" />
                                            <ContentPresenter
                                                x:Name="PART_Header"
                                                Grid.Column="1"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                ContentSource="Header" />
                                        </Grid>
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost" />
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader" Value="false" />
                                            <Condition Property="Width" Value="Auto" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader" Value="false" />
                                            <Condition Property="Height" Value="Auto" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                                    </MultiTrigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true" />
                                            <Condition Property="IsSelectionActive" Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

            </TreeView.Resources>

        </TreeView>
    </Grid>
</UserControl>
